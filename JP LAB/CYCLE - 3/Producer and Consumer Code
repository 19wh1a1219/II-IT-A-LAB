class List
{
    int n;
    boolean value = false;
    synchronized int get()
    {
        if(!value)
        {
            try{
                wait();
            }
            catch(InterruptedException e)
            {
                System.out.println("Exception caught");
            }
        }
        System.out.println("got : " + n);
        value = false;
        notify();
        return n;
    } 
    synchronized void put(int n)
    {
        if(value)
        {
            try{
                wait();
            }
            catch(InterruptedException e)
            {
                System.out.println("Exception caught");
            }
        }
        this.n = n;
        value = true;
        System.out.println("Put : " + n);
        notify();
    }
}

class Producer implements Runnable
{
    List l;
    Producer(List l)
    {
        this.l = l;
        new Thread(this, "Producer").start();
    }
    public void run()
    {
        int i=0;
        while(true)
        {
            l.put(i++);
        }
    }
}

class Consumer implements Runnable
{
    List l;
    Consumer(List l)
    {
        this.l = l;
        new Thread(this, "Consumer").start();
    }
    public void run()
    {
        while(true)
        {
            l.get();
        }
    }
}

class ProducerConsumer
{
    public static void main(String[] args)
    {
        List l = new List();
        Producer p = new Producer(l);
        Consumer c = new Consumer(l);
        System.out.println("Enter Control-c to stop ---- ");
    }
}
